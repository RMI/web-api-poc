name: "Docker"

on:
  schedule:
    - cron: '0 3 * * *'  # Nightly at 3 AM UTC
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-and-push:
    name: "Build and push"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  # Needed to push to GHCR

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prepare Environment
        id: prepare-environment
        env:
          registry: "ghcr.io"
          image_name: ${{ github.repository_owner }}/web-api-poc
        run: |
          NOW="$(date -u +'%Y%m%dT%H%M%SZ')"
          echo "now=$NOW" >> $GITHUB_OUTPUT
          echo "$NOW"

          registry_image=$(
            echo "$registry/$image_name" | \
            tr '[:upper:]' '[:lower:]' \
          )
          REGISTRY_IMAGE=${registry_image}
          echo "registry-image=$REGISTRY_IMAGE"
          echo "registry-image=$REGISTRY_IMAGE" >> $GITHUB_OUTPUT


      - name: Build and start container (as backing service)
        run: |
          docker compose up --build -d

      - name: Wait for container to be ready
        run: |
          for i in {1..10}; do
            echo "Checking health... attempt $i"
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:80/health || true)
            if [ "$status" == "200" ]; then
              echo "✅ Health check passed!"
              exit 0
            fi
            sleep 5
          done
          echo "❌ Health check failed after retries."
          docker compose logs
          exit 1

      - name: Tag image
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "tag=nightly" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "tag=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "tag=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Build and tag image
        run: |
          docker build -t ${{ steps.prepare-environment.outputs.registry-image }}:${{ steps.tag.outputs.tag }} .

      - name: Push to GHCR
        run: |
          docker push ${{ steps.prepare-environment.outputs.registry-image }}:${{ steps.tag.outputs.tag }}

      - name: Clean up
        run: docker compose down

